import streamlit as st
from auth import show_auth_page
from supabase_client import supabase
import datetime
import time
from main import ejecutar_busqueda_para_usuario

# --- LISTAS DE DATOS ---
MUNICIPIOS_BADAJOZ = [
    "Acedera", "Aceuchal", "Ahillones", "Alange", "La Albuera", "Alburquerque",
    "Alconchel", "Alconera", "Aljuc√©n", "Almendral", "Almendralejo", "Arroyo de San Serv√°n",
    "Atalaya", "Azuaga", "Badajoz", "Barcarrota", "Baterno", "Benquerencia de la Serena",
    "Berlanga", "Bienvenida", "Bodonal de la Sierra", "Burguillos del Cerro", "Cabeza del Buey",
    "Cabeza la Vaca", "Calamonte", "Calera de Le√≥n", "Calzadilla de los Barros", "Campanario",
    "Campillo de Llerena", "Capilla", "Carmonita", "El Carrascalejo", "Casas de Don Pedro",
    "Casas de Reina", "Castilblanco", "Castuera", "Cheles", "La Codosera", "Cordobilla de L√°cara",
    "La Coronada", "Corte de Peleas", "Cristina", "Don √Ålvaro", "Don Benito", "Entr√≠n Bajo",
    "Esparragalejo", "Esparragosa de la Serena", "Esparragosa de Lares", "Feria", "Fregenal de la Sierra",
    "Fuenlabrada de los Montes", "Fuente de Cantos", "Fuente del Arco", "Fuente del Maestre",
    "Fuentes de Le√≥n", "Galizuela", "Garbayuela", "Garlitos", "La Garrovilla", "Granja de Torrehermosa",
    "Guare√±a", "La Haba", "Helechosa de los Montes", "Herrera del Duque", "Higuera de la Serena",
    "Higuera de Llerena", "Higuera de Vargas", "Higuera la Real", "Hinojosa del Valle", "Hornachos",
    "Jerez de los Caballeros", "La Lapa", "Llera", "Llerena", "Lob√≥n", "Magacela", "Maguilla",
    "Malcocinado", "Malpartida de la Serena", "Manchita", "Medell√≠n", "Medina de las Torres",
    "Mengabril", "M√©rida", "Mirandilla", "Monesterio", "Montemol√≠n", "Monterrubio de la Serena",
    "Montijo", "La Morera", "La Nava de Santiago", "Navalvillar de Pela", "Nogales",
    "Oliva de la Frontera", "Oliva de M√©rida", "Olivenza", "Orellana de la Sierra", "Orellana la Vieja",
    "Palomas", "La Parra", "Pe√±alsordo", "Peraleda del Zaucejo", "Puebla de Alcocer",
    "Puebla de la Calzada", "Puebla de la Reina", "Puebla de Obando", "Puebla de Sancho P√©rez",
    "Puebla del Maestre", "Puebla del Prior", "Pueblonuevo del Guadiana", "Quintana de la Serena",
    "Reina", "Rena", "Retamal de Llerena", "Ribera del Fresno", "Risco", "La Roca de la Sierra",
    "Salvale√≥n", "Salvatierra de los Barros", "San Pedro de M√©rida", "San Vicente de Alc√°ntara",
    "Sancti-Sp√≠ritus", "Santa Amalia", "Santa Marta", "Los Santos de Maimona", "Segura de Le√≥n",
    "Siruela", "Solana de los Barros", "Talarrubias", "Talavera la Real", "T√°liga", "Tamurejo",
    "Torre de Miguel Sesmero", "Torremayor", "Torremej√≠a", "Trasierra", "Trujillanos", "Usagre",
    "Valdecaballeros", "Valdelacalzada", "Valdetorres", "Valencia de las Torres", "Valencia del Mombuey",
    "Valencia del Ventoso", "Valle de la Serena", "Valle de Matamoros", "Valle de Santa Ana",
    "Valverde de Burguillos", "Valverde de Legan√©s", "Valverde de Llerena", "Valverde de M√©rida",
    "Villafranca de los Barros", "Villagarc√≠a de la Torre", "Villagonzalo", "Villalba de los Barros",
    "Villanueva de la Serena", "Villanueva del Fresno", "Villar de Rena", "Villar del Rey",
    "Villarta de los Montes", "Zafra", "Zah√≠nos", "Zalamea de la Serena", "La Zarza",
    "Zarza-Capilla"
]

def show_alertas_tab():
    # --- PANEL DE CONTROL (DASHBOARD) ---
    user_email = st.session_state.user['email']
    user_id = st.session_state.user['id']

    st.header("üîî Configuraci√≥n de Alertas")
    st.markdown("Configura tus suscripciones para recibir alertas autom√°ticas por email")

    # --- Contenido Principal ---
    # --- Cargar preferencias ---
    try:
        response = supabase.table('preferencias').select('*').eq('user_id', user_id).single().execute()
        preferencias = response.data
    except Exception:
        preferencias = {}

    # --- L√≥gica y estado de la suscripci√≥n ---
    suscripcion_hasta_str = preferencias.get('suscripcion_activa_hasta')
    suscripcion_activa = False
    if suscripcion_hasta_str:
        try:
            suscripcion_hasta = datetime.datetime.strptime(suscripcion_hasta_str, '%Y-%m-%d').date()
            if suscripcion_hasta >= datetime.date.today():
                suscripcion_activa = True
        except (ValueError, TypeError):
            st.error("Error en la fecha de suscripci√≥n.")

    # --- Formulario de configuraci√≥n ---
    st.subheader("‚öôÔ∏è Mis Preferencias")
    col1, col2 = st.columns([0.7, 0.3])
    with col1:
        if suscripcion_activa:
            st.success(f"Suscripci√≥n activa hasta el {suscripcion_hasta.strftime('%d/%m/%Y')}.")
        else:
            st.warning("Suscripci√≥n caducada o no activa.")

    with st.expander("Suscripciones a Boletines", expanded=True):
        st.write("**üìç Municipios**")
        municipios_guardados = preferencias.get('municipios', []) or []
        municipios_seleccionados = st.multiselect(
            "Selecciona los municipios para monitorizar:",
            options=MUNICIPIOS_BADAJOZ,
            default=municipios_guardados
        )
        st.write("**üì∞ Boletines**")
        boletines_guardados = preferencias.get('boletines', []) or []
        b1 = st.checkbox("Diario Oficial de Extremadura (DOE)", value=("DOE" in boletines_guardados))
        b2 = st.checkbox("Bolet√≠n Oficial de la Provincia (BOP)", value=("BOP" in boletines_guardados))
        b3 = st.checkbox("Bolet√≠n Oficial del Estado (BOE)", value=("BOE" in boletines_guardados))

    with st.expander("üìù Mis Menciones M√∫ltiples", expanded=True):
        st.markdown("""
        **¬øC√≥mo funcionan las menciones m√∫ltiples?**
        - **Una l√≠nea = Una b√∫squeda completa**
        - **Comas dentro de l√≠nea = B√∫squeda AND** (todas las palabras deben aparecer)
        - **Ejemplo**: `licitaci√≥n, obra p√∫blica` solo encuentra textos que contengan AMBAS palabras
        """)
        
        st.write("**Menciones M√∫ltiples Guardadas**")
        menciones_guardadas = preferencias.get('menciones', []) or []
        menciones_seleccionadas_existentes = st.multiselect(
            "Tus menciones m√∫ltiples actuales. Desm√°rcalas para eliminarlas.",
            options=menciones_guardadas,
            default=menciones_guardadas
        )
        
        # Mostrar preview de las menciones existentes
        if menciones_seleccionadas_existentes:
            with st.expander("üëÅÔ∏è Preview de tus menciones"):
                for i, mencion in enumerate(menciones_seleccionadas_existentes, 1):
                    palabras = [p.strip() for p in mencion.split(',') if p.strip()]
                    if len(palabras) > 1:
                        st.write(f"{i}. **B√∫squeda AND**: {' + '.join(palabras)}")
                    else:
                        st.write(f"{i}. **B√∫squeda simple**: {palabras[0]}")

        st.write("**A√±adir Nuevas Menciones M√∫ltiples**")
        nuevas_menciones_texto = st.text_area(
            "Escribe nuevas menciones m√∫ltiples (una por l√≠nea):",
            placeholder="licitaci√≥n, obra p√∫blica\ncontrato, servicios\nurbanismo, licencia\nsubvenci√≥n, pymes",
            help="Cada l√≠nea = una b√∫squeda. Separa palabras con comas para que TODAS deban aparecer juntas"
        )

    with st.expander("Configuraci√≥n de Notificaciones", expanded=True):
        st.write("**üìß Opciones de Env√≠o**")
        hora_guardada_str = preferencias.get('hora_envio') or '08:00:00'
        hora_guardada = datetime.datetime.strptime(hora_guardada_str, '%H:%M:%S').time()
        hora_seleccionada = st.time_input("Hora de env√≠o del correo:", value=hora_guardada, step=3600)

        email_guardado = preferencias.get('email', user_email)
        email_seleccionado = st.text_input("Email para recibir las alertas:", value=email_guardado)

    if st.button("Guardar Cambios", use_container_width=True):
        boletines_seleccionados = []
        if b1: boletines_seleccionados.append("DOE")
        if b2: boletines_seleccionados.append("BOP")
        if b3: boletines_seleccionados.append("BOE")

        # Procesa las menciones m√∫ltiples (una por l√≠nea)
        nuevas_menciones = [m.strip() for m in nuevas_menciones_texto.split('\n') if m.strip()]
        menciones_finales = sorted(list(set(menciones_seleccionadas_existentes + nuevas_menciones)))

        fecha_suscripcion_final = str(suscripcion_hasta) if suscripcion_activa else str(datetime.date.today() + datetime.timedelta(days=30))

        try:
            datos_para_guardar = {
                "user_id": user_id,
                "municipios": municipios_seleccionados,
                "boletines": boletines_seleccionados,
                "menciones": menciones_finales,
                "hora_envio": str(hora_seleccionada),
                "email": email_seleccionado,
                "suscripcion_activa_hasta": fecha_suscripcion_final
            }
            supabase.table('preferencias').upsert(datos_para_guardar, on_conflict='user_id').execute()
            st.success("¬°Tus preferencias se han guardado con √©xito!")
            time.sleep(1)
            st.rerun()
        except Exception as e:
            st.error(f"No se pudieron guardar los cambios: {e}")